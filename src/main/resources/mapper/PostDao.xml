<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.glh.alumni.dao.PostDao">

    <resultMap type="cn.glh.alumni.entity.Post" id="PostMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="sort" column="sort" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="selectById" resultMap="PostMap">
        select id, sort, title,  content, create_time, state, user_id
        from t_post
        where id = #{id}
    </select>

    <!-- 查询全部 -->
    <select id="findAllPost" resultMap="PostMap">
        select id, sort, title,  content, create_time, state, user_id
        from t_post
        where state != 0
        limit #{offset}, #{rows}
    </select>

    <!--获取该分类下的所有帖子-->
    <select id="findSortPost" parameterType="string" resultType="cn.glh.alumni.entity.Post">
        select id, sort, title,  content, create_time, state, user_id
        from t_post
        where sort = #{sort} and state != 0
        limit #{offset}, #{rows}
    </select>

    <!--找出用户发布的帖子-->
    <select id="findByUserId" resultType="cn.glh.alumni.entity.Post">
        select id, sort, title, content, state, create_time, state, user_id from t_post where user_id = #{userId}
    </select>

    <!--分页查询已审核信息-->
    <select id="queryByPage" resultType="cn.glh.alumni.entity.Post">
        select id, sort, title,  content, create_time, state, user_id
        from t_post
        where state != 0
        limit #{offset},#{rows}
    </select>

    <!--分页查询未审核信息-->
    <select id="queryAuditByPage" resultType="cn.glh.alumni.entity.Post">
        select id, sort, title,  content, create_time, state, user_id
        from t_post
        where state = 0
        limit #{offset},#{rows}
    </select>

    <!--获取该类别总条码-->
    <select id="getCountBySort" resultType="java.lang.Integer">
        select count(*) from t_post where sort = #{sort} and state != 0
    </select>

    <!--获取总条码-->
    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from t_post
        where state != 0
    </select>

    <!--帖子检索-->
    <select id="searchPost" resultType="cn.glh.alumni.entity.Post">
        select id, sort, title,  content, create_time, state, user_id
        from t_post
        <where>
            <if test="title != null">
                title like concat('%',#{title},'%')
            </if>
            <if test="sort != null">
                and sort = #{sort}
            </if>
            and state != 0
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insertPost" keyProperty="id" useGeneratedKeys="true">
        insert into t_post(sort, title,  content, create_time, state, user_id)
        values (#{sort}, #{title}, #{content}, #{createTime}, #{state}, #{userId})
    </insert>

    <!--通过主键修改数据-->
    <update id="updatePost">
        update t_post
        <set>
            <if test="sort != null">
                sort = #{sort},
            </if>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--更新审核情况-->
    <update id="updateState">
        update t_post set state = #{state} where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from t_post
        where id = #{id}
    </delete>

</mapper>

